use Libraries.Game.ScreenResolution
use Libraries.Game.Game
use Libraries.Game.Graphics.Drawable
use Libraries.Compute.Vector2
use Libraries.Containers.List

class Main is Game
    ScreenResolution resolution 
    GroundProperties groundObject
    Drawable ground
    Drawable player
    PhysicsHandler physics
    PlayerProperties playerObject
    CollisionTracker collisions
    boolean jumpAllowed = playerObject:GetJumpAllowed()
    List<Platform> PlatformList
    PlatformTypes platformManager
    
    action Main
        UseDesktopResolution()
        resolution:GetWidth()
        StartGame()
    end

    action CreateGame
        EnablePhysics2D(true)
        


        // Create the ground using the separate GroundProperties class
        groundObject:CreateGround()
        ground = groundObject:GetGround()

        
        // Add the ground to the game
        Add(ground)
        //Add gravity
        physics:PhysicsHandler(me)
        physics:ApplyGravity()
        
        //Create the player using the separate PlayerProperties class
        playerObject:CreatePlayer()
        player = playerObject:GetPlayer()
        //Add the player to the game
        Add(player)
        //Add keyboard listener to the game
        AddKeyboardListener(playerObject)
        
        //Create and add platforms
        PlatformList = platformManager:GetPlatforms()
        integer i = 0
        Drawable currentPlatform
        repeat while i < PlatformList:GetSize()
            Platform current = PlatformList:Get(i)
            current:CreatePlatform()
            currentPlatform = current:GetPlatform()
            Add(currentPlatform)
            i = i + 1
        end
    end

    action Update(number seconds)
        //Move the player and handle jumping
        playerObject:MovePlayer()
        playerObject:Jump()
    end

end

