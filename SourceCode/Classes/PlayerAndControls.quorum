use Libraries.Game.Game
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Drawable
use Libraries.Containers.List
use Libraries.Interface.Item2D
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Interface.Events.KeyboardListener
use Libraries.Compute.Vector2


use Libraries.Interface.Events.CollisionEvent2D
use Libraries.Interface.Events.CollisionListener2D


class PlayerAndControls is KeyboardListener, CollisionListener2D
    Color color
    Drawable player
    integer speed = 300
    integer currentSpeed = 0
    integer jumpForce = 380
    boolean grounded = false
    

    
    Terrain terrain
    List<Drawable> TerrainList
    
        

    //Define the player
    action CreatePlayer(text name, integer size, number x, number y)
        color:SetHexColor("#791470")
        player:SetName(name)
        player:LoadFilledRectangle(size, size, color)
        player:SetPosition(x, y, -1)
        //Enable physics and set collidable
        player:EnablePhysics(true)
        player:CanRotate(false)
        player:SetResponsive()
        player:SetCollidable(true)
    end
    //Getting the player
    action GetPlayer returns Drawable
        return player
    end
    boolean esc = false
    //Get the esc boolean
    action GetEsc returns boolean
        return esc
    end
    //Controls
    action PressedKey(KeyboardEvent event)
        //Set esc to true for exiting the game
        if event:keyCode = event:ESCAPE
            esc = true
        end
        //Movement
        //Move player left when pressing A or the left arrow
        if event:keyCode = event:A 
        or event:keyCode = event:LEFT
            player:SetLinearVelocityX(-speed)
            //Store the current speed
            currentSpeed = -speed
        end
        //Move player right when pressing D or the right arrow
        if event:keyCode = event:D 
        or event:keyCode = event:RIGHT
            player:SetLinearVelocityX(speed)
            //Store the current speed
            currentSpeed = speed
        end
        //Jump when pressing space or up while grounded
        if event:keyCode = event:SPACE and grounded
        or event:keyCode = event:UP and grounded
            player:SetLinearVelocityY(jumpForce)
        end
    end

    action ReleasedKey(KeyboardEvent event)
        //Movement
        //When releasing movement keys, stop
        if event:keyCode = event:A 
        or event:keyCode = event:LEFT
        or event:keyCode = event:D 
        or event:keyCode = event:RIGHT
            player:SetLinearVelocityX(0)
        end
    end

    
    //Collisions
    action BeginCollision(CollisionEvent2D event)
        TerrainList = terrain:GetTerrain()
        Item2D itemA = cast(Item2D, event:GetItemA())
        Item2D itemB = cast(Item2D, event:GetItemB())        

        //Check if the player collides with the terrain
        integer i = 0
        text currentName = ""
        
        repeat while i < TerrainList:GetSize()
            currentName = TerrainList:Get(i):GetName()
            if itemA:GetName() = currentName
            and itemB:GetName() = "player"
                grounded = true 
            end
            i = i +1
        end
    end
    action FinishCollision(CollisionEvent2D event)
        TerrainList = terrain:GetTerrain()
        Item2D itemA = cast(Item2D, event:GetItemA())
        Item2D itemB = cast(Item2D, event:GetItemB())        

        integer i = 0
        text currentName = ""
        
        repeat while i < TerrainList:GetSize()
            currentName = TerrainList:Get(i):GetName()
            if itemA:GetName() = currentName
            and itemB:GetName() = "player"
                grounded = false 
            end
            i = i +1
        end
    end
end

