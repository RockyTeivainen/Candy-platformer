use Libraries.Game.Game
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Color
use Libraries.Interface.Events.KeyboardListener
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Interface.Item2D
use Libraries.Interface.Events.CollisionEvent2D
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Containers.List

class PlayerAndControls is KeyboardListener, CollisionListener2D
    PlatformTypes platformManager
    PhysicsHandler physics
    Drawable player
    Color playerColor
    GroundProperties groundObject
    Drawable ground = groundObject:GetGround()
    //Support variables esc, grounded
    boolean esc = false
    boolean grounded = false 
    List<Platform> Platforms = platformManager:GetPlatforms()
    

    
    //Create the player with pre-defined dimensions, name, color, and position
    action CreatePlayer
        player:SetName("player")
        player:LoadFilledRectangle(40, 40)
        player:SetPosition(20, 475)
        playerColor:SetHexColor("#191970")
        player:SetColor(playerColor)
        player:EnablePhysics(true)
        //Make player unable to rotate
        player:CanRotate(false)
        player:SetResponsive()
        player:SetCollidable(true)
    end
    
    //Get the player Drawable
    action GetPlayer() returns Drawable
    return player
    end


    //Move the player when the correct keys are pressed
    action PressedKey(KeyboardEvent event)
        
        //Store speed
        integer speed = 400
        //Movement key behaviour when pressing
        //If A or left arrow pressed, move left
        if event:keyCode = event:A 
        or event:keyCode = event:LEFT
            player:SetLinearVelocityX(-speed)
        //If D or right arrow pressed, rightHeld becomes true
        elseif event:keyCode = event:D 
        or event:keyCode = event:RIGHT
            player:SetLinearVelocityX(speed)
        end
 
        //Jump key behaviour when pressing
        integer jumpForce = 550
        
        //If SPACE or up arrow pressed and grounded is true, player jumps
        if event:keyCode = event:UP and grounded
        or event:keyCode = event:SPACE and grounded
        
            player:SetLinearVelocityY(jumpForce)
        end
        //If Esc is pressed, close the game
        if event:keyCode = event:ESCAPE
            esc = true
        end
    end

    action ReleasedKey(KeyboardEvent event)
        //Movement key behaviour when releasing keys
        //If movement keys released, stop the player
        if event:keyCode = event:A 
        or event:keyCode = event:LEFT
        or event:keyCode = event:D 
        or event:keyCode = event:RIGHT
            player:SetLinearVelocityX(0)
        end
    end

    //Get the esc boolean
    action GetEsc returns boolean
        return esc
    end


    //Collisions

    //When collision starts
    action BeginCollision(CollisionEvent2D event)
        Drawable itemA = cast(Drawable, event:GetItemA())
        Drawable itemB = cast(Drawable, event:GetItemB())
        //Set grounded to true
        //Playeyer can jump if on the ground
        if itemA:GetName() = "ground" and itemB:GetName() = "player"
        or itemB:GetName() = "ground" and itemA:GetName() = "player"

            grounded = true
        end

        //Test if the player touches any of the platforms
        integer i = 0
        
        repeat while i < Platforms:GetSize()
            Platforms:Get(i)
            
            if itemA:GetName() = Platforms:Get(i):GetPlatformName() and itemB:GetName() = "player"
            or itemB:GetName() = Platforms:Get(i):GetPlatformName() and itemA:GetName() = "player"
                grounded = true
            end
            
            i = i + 1
        end

    end
    
    //When collision ends
    action FinishCollision(CollisionEvent2D event)
        Drawable itemA = cast(Drawable, event:GetItemA())
        Drawable itemB = cast(Drawable, event:GetItemB())

        if itemA:GetName() = "ground" and itemB:GetName() = "player"
        or itemB:GetName() = "ground" and itemA:GetName() = "player"
            grounded = false
        end
        

        //Test if the player touches any of the platforms
        integer i = 0

        repeat while i < Platforms:GetSize()
            Platforms:Get(i)
            
            if itemA:GetName() = Platforms:Get(i):GetPlatformName() and itemB:GetName() = "player"
            or itemB:GetName() = Platforms:Get(i):GetPlatformName() and itemA:GetName() = "player"
                grounded = false
            end
            
            i = i + 1
        end

    end
    
end



